// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronEvolution/StockAssistant/api/private/gen/models"
)

// UserIndexListOKCode is the HTTP code returned for type UserIndexListOK
const UserIndexListOKCode int = 200

/*UserIndexListOK ok

swagger:response userIndexListOK
*/
type UserIndexListOK struct {

	/*
	  In: Body
	*/
	Payload models.UserIndexListOKBody `json:"body,omitempty"`
}

// NewUserIndexListOK creates UserIndexListOK with default headers values
func NewUserIndexListOK() *UserIndexListOK {
	return &UserIndexListOK{}
}

// WithPayload adds the payload to the user index list o k response
func (o *UserIndexListOK) WithPayload(payload models.UserIndexListOKBody) *UserIndexListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index list o k response
func (o *UserIndexListOK) SetPayload(payload models.UserIndexListOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.UserIndexListOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*UserIndexListDefault Error response

swagger:response userIndexListDefault
*/
type UserIndexListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.UserIndexListDefaultBody `json:"body,omitempty"`
}

// NewUserIndexListDefault creates UserIndexListDefault with default headers values
func NewUserIndexListDefault(code int) *UserIndexListDefault {
	if code <= 0 {
		code = 500
	}

	return &UserIndexListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user index list default response
func (o *UserIndexListDefault) WithStatusCode(code int) *UserIndexListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user index list default response
func (o *UserIndexListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user index list default response
func (o *UserIndexListDefault) WithPayload(payload *models.UserIndexListDefaultBody) *UserIndexListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index list default response
func (o *UserIndexListDefault) SetPayload(payload *models.UserIndexListDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
