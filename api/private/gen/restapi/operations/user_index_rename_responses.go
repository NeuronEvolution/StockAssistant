// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronEvolution/StockAssistant/api/private/gen/models"
)

// UserIndexRenameOKCode is the HTTP code returned for type UserIndexRenameOK
const UserIndexRenameOKCode int = 200

/*UserIndexRenameOK ok

swagger:response userIndexRenameOK
*/
type UserIndexRenameOK struct {

	/*
	  In: Body
	*/
	Payload *models.StockIndex `json:"body,omitempty"`
}

// NewUserIndexRenameOK creates UserIndexRenameOK with default headers values
func NewUserIndexRenameOK() *UserIndexRenameOK {
	return &UserIndexRenameOK{}
}

// WithPayload adds the payload to the user index rename o k response
func (o *UserIndexRenameOK) WithPayload(payload *models.StockIndex) *UserIndexRenameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index rename o k response
func (o *UserIndexRenameOK) SetPayload(payload *models.StockIndex) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexRenameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UserIndexRenameDefault Error response

swagger:response userIndexRenameDefault
*/
type UserIndexRenameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.UserIndexRenameDefaultBody `json:"body,omitempty"`
}

// NewUserIndexRenameDefault creates UserIndexRenameDefault with default headers values
func NewUserIndexRenameDefault(code int) *UserIndexRenameDefault {
	if code <= 0 {
		code = 500
	}

	return &UserIndexRenameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user index rename default response
func (o *UserIndexRenameDefault) WithStatusCode(code int) *UserIndexRenameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user index rename default response
func (o *UserIndexRenameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user index rename default response
func (o *UserIndexRenameDefault) WithPayload(payload *models.UserIndexRenameDefaultBody) *UserIndexRenameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index rename default response
func (o *UserIndexRenameDefault) SetPayload(payload *models.UserIndexRenameDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexRenameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
