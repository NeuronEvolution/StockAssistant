// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/private/gen/models"
)

// UserStockIndexUpdateReader is a Reader for the UserStockIndexUpdate structure.
type UserStockIndexUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserStockIndexUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserStockIndexUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUserStockIndexUpdateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUserStockIndexUpdateOK creates a UserStockIndexUpdateOK with default headers values
func NewUserStockIndexUpdateOK() *UserStockIndexUpdateOK {
	return &UserStockIndexUpdateOK{}
}

/*UserStockIndexUpdateOK handles this case with default header values.

ok
*/
type UserStockIndexUpdateOK struct {
	Payload *models.UserStockIndex
}

func (o *UserStockIndexUpdateOK) Error() string {
	return fmt.Sprintf("[POST /{userId}/stockIndices/{indexName}][%d] userStockIndexUpdateOK  %+v", 200, o.Payload)
}

func (o *UserStockIndexUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserStockIndex)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserStockIndexUpdateDefault creates a UserStockIndexUpdateDefault with default headers values
func NewUserStockIndexUpdateDefault(code int) *UserStockIndexUpdateDefault {
	return &UserStockIndexUpdateDefault{
		_statusCode: code,
	}
}

/*UserStockIndexUpdateDefault handles this case with default header values.

Error response
*/
type UserStockIndexUpdateDefault struct {
	_statusCode int

	Payload *models.UserStockIndexUpdateDefaultBody
}

// Code gets the status code for the user stock index update default response
func (o *UserStockIndexUpdateDefault) Code() int {
	return o._statusCode
}

func (o *UserStockIndexUpdateDefault) Error() string {
	return fmt.Sprintf("[POST /{userId}/stockIndices/{indexName}][%d] UserStockIndexUpdate default  %+v", o._statusCode, o.Payload)
}

func (o *UserStockIndexUpdateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserStockIndexUpdateDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
