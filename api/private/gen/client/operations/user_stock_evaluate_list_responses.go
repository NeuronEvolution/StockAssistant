// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/private/gen/models"
)

// UserStockEvaluateListReader is a Reader for the UserStockEvaluateList structure.
type UserStockEvaluateListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserStockEvaluateListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserStockEvaluateListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUserStockEvaluateListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUserStockEvaluateListOK creates a UserStockEvaluateListOK with default headers values
func NewUserStockEvaluateListOK() *UserStockEvaluateListOK {
	return &UserStockEvaluateListOK{}
}

/*UserStockEvaluateListOK handles this case with default header values.

ok
*/
type UserStockEvaluateListOK struct {
	Payload *models.UserStockEvaluateListResponse
}

func (o *UserStockEvaluateListOK) Error() string {
	return fmt.Sprintf("[GET /{userId}/stockEvaluates][%d] userStockEvaluateListOK  %+v", 200, o.Payload)
}

func (o *UserStockEvaluateListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserStockEvaluateListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserStockEvaluateListDefault creates a UserStockEvaluateListDefault with default headers values
func NewUserStockEvaluateListDefault(code int) *UserStockEvaluateListDefault {
	return &UserStockEvaluateListDefault{
		_statusCode: code,
	}
}

/*UserStockEvaluateListDefault handles this case with default header values.

Error response
*/
type UserStockEvaluateListDefault struct {
	_statusCode int

	Payload *models.UserStockEvaluateListDefaultBody
}

// Code gets the status code for the user stock evaluate list default response
func (o *UserStockEvaluateListDefault) Code() int {
	return o._statusCode
}

func (o *UserStockEvaluateListDefault) Error() string {
	return fmt.Sprintf("[GET /{userId}/stockEvaluates][%d] UserStockEvaluateList default  %+v", o._statusCode, o.Payload)
}

func (o *UserStockEvaluateListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserStockEvaluateListDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
