// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/private/gen/models"
)

// UserIndexListReader is a Reader for the UserIndexList structure.
type UserIndexListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserIndexListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserIndexListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUserIndexListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUserIndexListOK creates a UserIndexListOK with default headers values
func NewUserIndexListOK() *UserIndexListOK {
	return &UserIndexListOK{}
}

/*UserIndexListOK handles this case with default header values.

ok
*/
type UserIndexListOK struct {
	Payload models.UserIndexListOKBody
}

func (o *UserIndexListOK) Error() string {
	return fmt.Sprintf("[GET /{userId}/indices][%d] userIndexListOK  %+v", 200, o.Payload)
}

func (o *UserIndexListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexListDefault creates a UserIndexListDefault with default headers values
func NewUserIndexListDefault(code int) *UserIndexListDefault {
	return &UserIndexListDefault{
		_statusCode: code,
	}
}

/*UserIndexListDefault handles this case with default header values.

Error response
*/
type UserIndexListDefault struct {
	_statusCode int

	Payload *models.UserIndexListDefaultBody
}

// Code gets the status code for the user index list default response
func (o *UserIndexListDefault) Code() int {
	return o._statusCode
}

func (o *UserIndexListDefault) Error() string {
	return fmt.Sprintf("[GET /{userId}/indices][%d] UserIndexList default  %+v", o._statusCode, o.Payload)
}

func (o *UserIndexListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserIndexListDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
