// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/private/gen/models"
)

// UserIndexRenameReader is a Reader for the UserIndexRename structure.
type UserIndexRenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserIndexRenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserIndexRenameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUserIndexRenameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUserIndexRenameOK creates a UserIndexRenameOK with default headers values
func NewUserIndexRenameOK() *UserIndexRenameOK {
	return &UserIndexRenameOK{}
}

/*UserIndexRenameOK handles this case with default header values.

ok
*/
type UserIndexRenameOK struct {
	Payload *models.StockIndex
}

func (o *UserIndexRenameOK) Error() string {
	return fmt.Sprintf("[POST /{userId}/indices/rename][%d] userIndexRenameOK  %+v", 200, o.Payload)
}

func (o *UserIndexRenameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StockIndex)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexRenameDefault creates a UserIndexRenameDefault with default headers values
func NewUserIndexRenameDefault(code int) *UserIndexRenameDefault {
	return &UserIndexRenameDefault{
		_statusCode: code,
	}
}

/*UserIndexRenameDefault handles this case with default header values.

Error response
*/
type UserIndexRenameDefault struct {
	_statusCode int

	Payload *models.UserIndexRenameDefaultBody
}

// Code gets the status code for the user index rename default response
func (o *UserIndexRenameDefault) Code() int {
	return o._statusCode
}

func (o *UserIndexRenameDefault) Error() string {
	return fmt.Sprintf("[POST /{userId}/indices/rename][%d] UserIndexRename default  %+v", o._statusCode, o.Payload)
}

func (o *UserIndexRenameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserIndexRenameDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
