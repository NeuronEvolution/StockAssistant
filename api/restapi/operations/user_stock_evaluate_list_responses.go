// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronEvolution/StockAssistant/api/models"
)

// UserStockEvaluateListOKCode is the HTTP code returned for type UserStockEvaluateListOK
const UserStockEvaluateListOKCode int = 200

/*UserStockEvaluateListOK ok

swagger:response userStockEvaluateListOK
*/
type UserStockEvaluateListOK struct {

	/*
	  In: Body
	*/
	Payload models.UserStockEvaluateListOKBody `json:"body,omitempty"`
}

// NewUserStockEvaluateListOK creates UserStockEvaluateListOK with default headers values
func NewUserStockEvaluateListOK() *UserStockEvaluateListOK {
	return &UserStockEvaluateListOK{}
}

// WithPayload adds the payload to the user stock evaluate list o k response
func (o *UserStockEvaluateListOK) WithPayload(payload models.UserStockEvaluateListOKBody) *UserStockEvaluateListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user stock evaluate list o k response
func (o *UserStockEvaluateListOK) SetPayload(payload models.UserStockEvaluateListOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserStockEvaluateListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.UserStockEvaluateListOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UserStockEvaluateListBadRequestCode is the HTTP code returned for type UserStockEvaluateListBadRequest
const UserStockEvaluateListBadRequestCode int = 400

/*UserStockEvaluateListBadRequest Bad request

swagger:response userStockEvaluateListBadRequest
*/
type UserStockEvaluateListBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUserStockEvaluateListBadRequest creates UserStockEvaluateListBadRequest with default headers values
func NewUserStockEvaluateListBadRequest() *UserStockEvaluateListBadRequest {
	return &UserStockEvaluateListBadRequest{}
}

// WithPayload adds the payload to the user stock evaluate list bad request response
func (o *UserStockEvaluateListBadRequest) WithPayload(payload string) *UserStockEvaluateListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user stock evaluate list bad request response
func (o *UserStockEvaluateListBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserStockEvaluateListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UserStockEvaluateListInternalServerErrorCode is the HTTP code returned for type UserStockEvaluateListInternalServerError
const UserStockEvaluateListInternalServerErrorCode int = 500

/*UserStockEvaluateListInternalServerError Internal error

swagger:response userStockEvaluateListInternalServerError
*/
type UserStockEvaluateListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUserStockEvaluateListInternalServerError creates UserStockEvaluateListInternalServerError with default headers values
func NewUserStockEvaluateListInternalServerError() *UserStockEvaluateListInternalServerError {
	return &UserStockEvaluateListInternalServerError{}
}

// WithPayload adds the payload to the user stock evaluate list internal server error response
func (o *UserStockEvaluateListInternalServerError) WithPayload(payload string) *UserStockEvaluateListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user stock evaluate list internal server error response
func (o *UserStockEvaluateListInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserStockEvaluateListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
