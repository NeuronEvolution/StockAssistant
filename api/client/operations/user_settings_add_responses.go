// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/models"
)

// UserSettingsAddReader is a Reader for the UserSettingsAdd structure.
type UserSettingsAddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserSettingsAddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserSettingsAddOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserSettingsAddBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserSettingsAddInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserSettingsAddOK creates a UserSettingsAddOK with default headers values
func NewUserSettingsAddOK() *UserSettingsAddOK {
	return &UserSettingsAddOK{}
}

/*UserSettingsAddOK handles this case with default header values.

ok
*/
type UserSettingsAddOK struct {
	Payload *models.Setting
}

func (o *UserSettingsAddOK) Error() string {
	return fmt.Sprintf("[PUT /{userId}/settings][%d] userSettingsAddOK  %+v", 200, o.Payload)
}

func (o *UserSettingsAddOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Setting)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserSettingsAddBadRequest creates a UserSettingsAddBadRequest with default headers values
func NewUserSettingsAddBadRequest() *UserSettingsAddBadRequest {
	return &UserSettingsAddBadRequest{}
}

/*UserSettingsAddBadRequest handles this case with default header values.

Bad request
*/
type UserSettingsAddBadRequest struct {
	Payload string
}

func (o *UserSettingsAddBadRequest) Error() string {
	return fmt.Sprintf("[PUT /{userId}/settings][%d] userSettingsAddBadRequest  %+v", 400, o.Payload)
}

func (o *UserSettingsAddBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserSettingsAddInternalServerError creates a UserSettingsAddInternalServerError with default headers values
func NewUserSettingsAddInternalServerError() *UserSettingsAddInternalServerError {
	return &UserSettingsAddInternalServerError{}
}

/*UserSettingsAddInternalServerError handles this case with default header values.

Internal error
*/
type UserSettingsAddInternalServerError struct {
	Payload string
}

func (o *UserSettingsAddInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /{userId}/settings][%d] userSettingsAddInternalServerError  %+v", 500, o.Payload)
}

func (o *UserSettingsAddInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
