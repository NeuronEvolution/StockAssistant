// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/models"
)

// UserSettingsGetReader is a Reader for the UserSettingsGet structure.
type UserSettingsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserSettingsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserSettingsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserSettingsGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserSettingsGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserSettingsGetOK creates a UserSettingsGetOK with default headers values
func NewUserSettingsGetOK() *UserSettingsGetOK {
	return &UserSettingsGetOK{}
}

/*UserSettingsGetOK handles this case with default header values.

ok
*/
type UserSettingsGetOK struct {
	Payload *models.Setting
}

func (o *UserSettingsGetOK) Error() string {
	return fmt.Sprintf("[GET /{userId}/settings/{configKey}][%d] userSettingsGetOK  %+v", 200, o.Payload)
}

func (o *UserSettingsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Setting)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserSettingsGetBadRequest creates a UserSettingsGetBadRequest with default headers values
func NewUserSettingsGetBadRequest() *UserSettingsGetBadRequest {
	return &UserSettingsGetBadRequest{}
}

/*UserSettingsGetBadRequest handles this case with default header values.

Bad request
*/
type UserSettingsGetBadRequest struct {
	Payload string
}

func (o *UserSettingsGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /{userId}/settings/{configKey}][%d] userSettingsGetBadRequest  %+v", 400, o.Payload)
}

func (o *UserSettingsGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserSettingsGetInternalServerError creates a UserSettingsGetInternalServerError with default headers values
func NewUserSettingsGetInternalServerError() *UserSettingsGetInternalServerError {
	return &UserSettingsGetInternalServerError{}
}

/*UserSettingsGetInternalServerError handles this case with default header values.

Internal error
*/
type UserSettingsGetInternalServerError struct {
	Payload string
}

func (o *UserSettingsGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{userId}/settings/{configKey}][%d] userSettingsGetInternalServerError  %+v", 500, o.Payload)
}

func (o *UserSettingsGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
