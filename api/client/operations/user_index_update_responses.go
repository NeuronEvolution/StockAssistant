// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/models"
)

// UserIndexUpdateReader is a Reader for the UserIndexUpdate structure.
type UserIndexUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserIndexUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserIndexUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserIndexUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserIndexUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserIndexUpdateOK creates a UserIndexUpdateOK with default headers values
func NewUserIndexUpdateOK() *UserIndexUpdateOK {
	return &UserIndexUpdateOK{}
}

/*UserIndexUpdateOK handles this case with default header values.

ok
*/
type UserIndexUpdateOK struct {
	Payload *models.StockIndex
}

func (o *UserIndexUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /{userId}/indices/{indexId}][%d] userIndexUpdateOK  %+v", 200, o.Payload)
}

func (o *UserIndexUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StockIndex)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexUpdateBadRequest creates a UserIndexUpdateBadRequest with default headers values
func NewUserIndexUpdateBadRequest() *UserIndexUpdateBadRequest {
	return &UserIndexUpdateBadRequest{}
}

/*UserIndexUpdateBadRequest handles this case with default header values.

Bad request
*/
type UserIndexUpdateBadRequest struct {
	Payload string
}

func (o *UserIndexUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /{userId}/indices/{indexId}][%d] userIndexUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *UserIndexUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexUpdateInternalServerError creates a UserIndexUpdateInternalServerError with default headers values
func NewUserIndexUpdateInternalServerError() *UserIndexUpdateInternalServerError {
	return &UserIndexUpdateInternalServerError{}
}

/*UserIndexUpdateInternalServerError handles this case with default header values.

Internal error
*/
type UserIndexUpdateInternalServerError struct {
	Payload string
}

func (o *UserIndexUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /{userId}/indices/{indexId}][%d] userIndexUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *UserIndexUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
