// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UserIndexDeleteReader is a Reader for the UserIndexDelete structure.
type UserIndexDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserIndexDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserIndexDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserIndexDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserIndexDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserIndexDeleteOK creates a UserIndexDeleteOK with default headers values
func NewUserIndexDeleteOK() *UserIndexDeleteOK {
	return &UserIndexDeleteOK{}
}

/*UserIndexDeleteOK handles this case with default header values.

ok
*/
type UserIndexDeleteOK struct {
}

func (o *UserIndexDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /{userId}/indices/{indexId}][%d] userIndexDeleteOK ", 200)
}

func (o *UserIndexDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserIndexDeleteBadRequest creates a UserIndexDeleteBadRequest with default headers values
func NewUserIndexDeleteBadRequest() *UserIndexDeleteBadRequest {
	return &UserIndexDeleteBadRequest{}
}

/*UserIndexDeleteBadRequest handles this case with default header values.

Bad request
*/
type UserIndexDeleteBadRequest struct {
	Payload string
}

func (o *UserIndexDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /{userId}/indices/{indexId}][%d] userIndexDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *UserIndexDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexDeleteInternalServerError creates a UserIndexDeleteInternalServerError with default headers values
func NewUserIndexDeleteInternalServerError() *UserIndexDeleteInternalServerError {
	return &UserIndexDeleteInternalServerError{}
}

/*UserIndexDeleteInternalServerError handles this case with default header values.

Internal error
*/
type UserIndexDeleteInternalServerError struct {
	Payload string
}

func (o *UserIndexDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /{userId}/indices/{indexId}][%d] userIndexDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *UserIndexDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
