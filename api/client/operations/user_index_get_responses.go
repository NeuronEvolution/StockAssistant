// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/models"
)

// UserIndexGetReader is a Reader for the UserIndexGet structure.
type UserIndexGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserIndexGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserIndexGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserIndexGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserIndexGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserIndexGetOK creates a UserIndexGetOK with default headers values
func NewUserIndexGetOK() *UserIndexGetOK {
	return &UserIndexGetOK{}
}

/*UserIndexGetOK handles this case with default header values.

ok
*/
type UserIndexGetOK struct {
	Payload *models.StockIndex
}

func (o *UserIndexGetOK) Error() string {
	return fmt.Sprintf("[GET /{userId}/indices/{indexId}][%d] userIndexGetOK  %+v", 200, o.Payload)
}

func (o *UserIndexGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StockIndex)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexGetBadRequest creates a UserIndexGetBadRequest with default headers values
func NewUserIndexGetBadRequest() *UserIndexGetBadRequest {
	return &UserIndexGetBadRequest{}
}

/*UserIndexGetBadRequest handles this case with default header values.

Bad request
*/
type UserIndexGetBadRequest struct {
	Payload string
}

func (o *UserIndexGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /{userId}/indices/{indexId}][%d] userIndexGetBadRequest  %+v", 400, o.Payload)
}

func (o *UserIndexGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexGetInternalServerError creates a UserIndexGetInternalServerError with default headers values
func NewUserIndexGetInternalServerError() *UserIndexGetInternalServerError {
	return &UserIndexGetInternalServerError{}
}

/*UserIndexGetInternalServerError handles this case with default header values.

Internal error
*/
type UserIndexGetInternalServerError struct {
	Payload string
}

func (o *UserIndexGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{userId}/indices/{indexId}][%d] userIndexGetInternalServerError  %+v", 500, o.Payload)
}

func (o *UserIndexGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
