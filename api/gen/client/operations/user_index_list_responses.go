// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/gen/models"
)

// UserIndexListReader is a Reader for the UserIndexList structure.
type UserIndexListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserIndexListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserIndexListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserIndexListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserIndexListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserIndexListOK creates a UserIndexListOK with default headers values
func NewUserIndexListOK() *UserIndexListOK {
	return &UserIndexListOK{}
}

/*UserIndexListOK handles this case with default header values.

ok
*/
type UserIndexListOK struct {
	Payload models.UserIndexListOKBody
}

func (o *UserIndexListOK) Error() string {
	return fmt.Sprintf("[GET /{userId}/indices][%d] userIndexListOK  %+v", 200, o.Payload)
}

func (o *UserIndexListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexListBadRequest creates a UserIndexListBadRequest with default headers values
func NewUserIndexListBadRequest() *UserIndexListBadRequest {
	return &UserIndexListBadRequest{}
}

/*UserIndexListBadRequest handles this case with default header values.

Bad request
*/
type UserIndexListBadRequest struct {
	Payload string
}

func (o *UserIndexListBadRequest) Error() string {
	return fmt.Sprintf("[GET /{userId}/indices][%d] userIndexListBadRequest  %+v", 400, o.Payload)
}

func (o *UserIndexListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexListInternalServerError creates a UserIndexListInternalServerError with default headers values
func NewUserIndexListInternalServerError() *UserIndexListInternalServerError {
	return &UserIndexListInternalServerError{}
}

/*UserIndexListInternalServerError handles this case with default header values.

Internal server error
*/
type UserIndexListInternalServerError struct {
	Payload string
}

func (o *UserIndexListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{userId}/indices][%d] userIndexListInternalServerError  %+v", 500, o.Payload)
}

func (o *UserIndexListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
