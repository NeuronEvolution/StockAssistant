// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/gen/models"
)

// UserIndexEvaluateSaveReader is a Reader for the UserIndexEvaluateSave structure.
type UserIndexEvaluateSaveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserIndexEvaluateSaveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserIndexEvaluateSaveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUserIndexEvaluateSaveDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUserIndexEvaluateSaveOK creates a UserIndexEvaluateSaveOK with default headers values
func NewUserIndexEvaluateSaveOK() *UserIndexEvaluateSaveOK {
	return &UserIndexEvaluateSaveOK{}
}

/*UserIndexEvaluateSaveOK handles this case with default header values.

ok
*/
type UserIndexEvaluateSaveOK struct {
	Payload *models.IndexEvaluate
}

func (o *UserIndexEvaluateSaveOK) Error() string {
	return fmt.Sprintf("[POST /{userId}/stockEvaluates/{stockId}/indexEvaluates][%d] userIndexEvaluateSaveOK  %+v", 200, o.Payload)
}

func (o *UserIndexEvaluateSaveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IndexEvaluate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserIndexEvaluateSaveDefault creates a UserIndexEvaluateSaveDefault with default headers values
func NewUserIndexEvaluateSaveDefault(code int) *UserIndexEvaluateSaveDefault {
	return &UserIndexEvaluateSaveDefault{
		_statusCode: code,
	}
}

/*UserIndexEvaluateSaveDefault handles this case with default header values.

Error response
*/
type UserIndexEvaluateSaveDefault struct {
	_statusCode int

	Payload *models.UserIndexEvaluateSaveDefaultBody
}

// Code gets the status code for the user index evaluate save default response
func (o *UserIndexEvaluateSaveDefault) Code() int {
	return o._statusCode
}

func (o *UserIndexEvaluateSaveDefault) Error() string {
	return fmt.Sprintf("[POST /{userId}/stockEvaluates/{stockId}/indexEvaluates][%d] UserIndexEvaluateSave default  %+v", o._statusCode, o.Payload)
}

func (o *UserIndexEvaluateSaveDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserIndexEvaluateSaveDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
