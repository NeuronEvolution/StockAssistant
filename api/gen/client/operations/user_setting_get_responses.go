// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/NeuronEvolution/StockAssistant/api/gen/models"
)

// UserSettingGetReader is a Reader for the UserSettingGet structure.
type UserSettingGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserSettingGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserSettingGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserSettingGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserSettingGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserSettingGetOK creates a UserSettingGetOK with default headers values
func NewUserSettingGetOK() *UserSettingGetOK {
	return &UserSettingGetOK{}
}

/*UserSettingGetOK handles this case with default header values.

ok
*/
type UserSettingGetOK struct {
	Payload *models.Setting
}

func (o *UserSettingGetOK) Error() string {
	return fmt.Sprintf("[GET /{userId}/settings/{configKey}][%d] userSettingGetOK  %+v", 200, o.Payload)
}

func (o *UserSettingGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Setting)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserSettingGetBadRequest creates a UserSettingGetBadRequest with default headers values
func NewUserSettingGetBadRequest() *UserSettingGetBadRequest {
	return &UserSettingGetBadRequest{}
}

/*UserSettingGetBadRequest handles this case with default header values.

Bad request
*/
type UserSettingGetBadRequest struct {
	Payload string
}

func (o *UserSettingGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /{userId}/settings/{configKey}][%d] userSettingGetBadRequest  %+v", 400, o.Payload)
}

func (o *UserSettingGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserSettingGetInternalServerError creates a UserSettingGetInternalServerError with default headers values
func NewUserSettingGetInternalServerError() *UserSettingGetInternalServerError {
	return &UserSettingGetInternalServerError{}
}

/*UserSettingGetInternalServerError handles this case with default header values.

Internal server error
*/
type UserSettingGetInternalServerError struct {
	Payload string
}

func (o *UserSettingGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{userId}/settings/{configKey}][%d] userSettingGetInternalServerError  %+v", 500, o.Payload)
}

func (o *UserSettingGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
