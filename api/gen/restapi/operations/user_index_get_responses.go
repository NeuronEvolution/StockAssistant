// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronEvolution/StockAssistant/api/gen/models"
)

// UserIndexGetOKCode is the HTTP code returned for type UserIndexGetOK
const UserIndexGetOKCode int = 200

/*UserIndexGetOK ok

swagger:response userIndexGetOK
*/
type UserIndexGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.StockIndex `json:"body,omitempty"`
}

// NewUserIndexGetOK creates UserIndexGetOK with default headers values
func NewUserIndexGetOK() *UserIndexGetOK {
	return &UserIndexGetOK{}
}

// WithPayload adds the payload to the user index get o k response
func (o *UserIndexGetOK) WithPayload(payload *models.StockIndex) *UserIndexGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index get o k response
func (o *UserIndexGetOK) SetPayload(payload *models.StockIndex) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UserIndexGetDefault Error response

swagger:response userIndexGetDefault
*/
type UserIndexGetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.UserIndexGetDefaultBody `json:"body,omitempty"`
}

// NewUserIndexGetDefault creates UserIndexGetDefault with default headers values
func NewUserIndexGetDefault(code int) *UserIndexGetDefault {
	if code <= 0 {
		code = 500
	}

	return &UserIndexGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user index get default response
func (o *UserIndexGetDefault) WithStatusCode(code int) *UserIndexGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user index get default response
func (o *UserIndexGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user index get default response
func (o *UserIndexGetDefault) WithPayload(payload *models.UserIndexGetDefaultBody) *UserIndexGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index get default response
func (o *UserIndexGetDefault) SetPayload(payload *models.UserIndexGetDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
