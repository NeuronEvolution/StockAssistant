// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronEvolution/StockAssistant/api/gen/models"
)

// UserIndexEvaluateListOKCode is the HTTP code returned for type UserIndexEvaluateListOK
const UserIndexEvaluateListOKCode int = 200

/*UserIndexEvaluateListOK ok

swagger:response userIndexEvaluateListOK
*/
type UserIndexEvaluateListOK struct {

	/*
	  In: Body
	*/
	Payload models.UserIndexEvaluateListOKBody `json:"body,omitempty"`
}

// NewUserIndexEvaluateListOK creates UserIndexEvaluateListOK with default headers values
func NewUserIndexEvaluateListOK() *UserIndexEvaluateListOK {
	return &UserIndexEvaluateListOK{}
}

// WithPayload adds the payload to the user index evaluate list o k response
func (o *UserIndexEvaluateListOK) WithPayload(payload models.UserIndexEvaluateListOKBody) *UserIndexEvaluateListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index evaluate list o k response
func (o *UserIndexEvaluateListOK) SetPayload(payload models.UserIndexEvaluateListOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexEvaluateListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.UserIndexEvaluateListOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*UserIndexEvaluateListDefault Error response

swagger:response userIndexEvaluateListDefault
*/
type UserIndexEvaluateListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.UserIndexEvaluateListDefaultBody `json:"body,omitempty"`
}

// NewUserIndexEvaluateListDefault creates UserIndexEvaluateListDefault with default headers values
func NewUserIndexEvaluateListDefault(code int) *UserIndexEvaluateListDefault {
	if code <= 0 {
		code = 500
	}

	return &UserIndexEvaluateListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user index evaluate list default response
func (o *UserIndexEvaluateListDefault) WithStatusCode(code int) *UserIndexEvaluateListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user index evaluate list default response
func (o *UserIndexEvaluateListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user index evaluate list default response
func (o *UserIndexEvaluateListDefault) WithPayload(payload *models.UserIndexEvaluateListDefaultBody) *UserIndexEvaluateListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index evaluate list default response
func (o *UserIndexEvaluateListDefault) SetPayload(payload *models.UserIndexEvaluateListDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexEvaluateListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
