// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronEvolution/StockAssistant/api/gen/models"
)

// UserIndexEvaluateListOKCode is the HTTP code returned for type UserIndexEvaluateListOK
const UserIndexEvaluateListOKCode int = 200

/*UserIndexEvaluateListOK ok

swagger:response userIndexEvaluateListOK
*/
type UserIndexEvaluateListOK struct {

	/*
	  In: Body
	*/
	Payload models.UserIndexEvaluateListOKBody `json:"body,omitempty"`
}

// NewUserIndexEvaluateListOK creates UserIndexEvaluateListOK with default headers values
func NewUserIndexEvaluateListOK() *UserIndexEvaluateListOK {
	return &UserIndexEvaluateListOK{}
}

// WithPayload adds the payload to the user index evaluate list o k response
func (o *UserIndexEvaluateListOK) WithPayload(payload models.UserIndexEvaluateListOKBody) *UserIndexEvaluateListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index evaluate list o k response
func (o *UserIndexEvaluateListOK) SetPayload(payload models.UserIndexEvaluateListOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexEvaluateListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.UserIndexEvaluateListOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UserIndexEvaluateListBadRequestCode is the HTTP code returned for type UserIndexEvaluateListBadRequest
const UserIndexEvaluateListBadRequestCode int = 400

/*UserIndexEvaluateListBadRequest Bad request

swagger:response userIndexEvaluateListBadRequest
*/
type UserIndexEvaluateListBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUserIndexEvaluateListBadRequest creates UserIndexEvaluateListBadRequest with default headers values
func NewUserIndexEvaluateListBadRequest() *UserIndexEvaluateListBadRequest {
	return &UserIndexEvaluateListBadRequest{}
}

// WithPayload adds the payload to the user index evaluate list bad request response
func (o *UserIndexEvaluateListBadRequest) WithPayload(payload string) *UserIndexEvaluateListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index evaluate list bad request response
func (o *UserIndexEvaluateListBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexEvaluateListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UserIndexEvaluateListInternalServerErrorCode is the HTTP code returned for type UserIndexEvaluateListInternalServerError
const UserIndexEvaluateListInternalServerErrorCode int = 500

/*UserIndexEvaluateListInternalServerError Internal server error

swagger:response userIndexEvaluateListInternalServerError
*/
type UserIndexEvaluateListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUserIndexEvaluateListInternalServerError creates UserIndexEvaluateListInternalServerError with default headers values
func NewUserIndexEvaluateListInternalServerError() *UserIndexEvaluateListInternalServerError {
	return &UserIndexEvaluateListInternalServerError{}
}

// WithPayload adds the payload to the user index evaluate list internal server error response
func (o *UserIndexEvaluateListInternalServerError) WithPayload(payload string) *UserIndexEvaluateListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user index evaluate list internal server error response
func (o *UserIndexEvaluateListInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserIndexEvaluateListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
